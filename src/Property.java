
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author laury
 */
public class Property extends javax.swing.JFrame {

    /**
     * Creates new form Property
     */
    

    Prop_Type type = new Prop_Type();
    HashMap<String, Integer> map = type.getTypesMap();
    
    public Property() {
        initComponents();
        
        // populate the combobox
        bindCombo();
      
        
               
    }
    
    // create a function to populate the jcombobox with types data
    public void bindCombo()
    {
        for(String s : map.keySet())
        {
            jComboBox_Type.addItem(s);
        }
   }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel_Title = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Address = new javax.swing.JTextArea();
        jButton_Add_Property = new javax.swing.JButton();
        jButton_Edit_Property = new javax.swing.JButton();
        jButton_Remove_Property = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField_SquareFeet = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField_OwnerId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_Price = new javax.swing.JTextField();
        jButton_Search_Property = new javax.swing.JButton();
        jComboBox_Type = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jSpinner_Bedrooms = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSpinner_Bathrooms = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinner_Panels = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea_Comment = new javax.swing.JTextArea();
        jCheckBox_SecurityCameras = new javax.swing.JCheckBox();
        jCheckBox_ElectricFence = new javax.swing.JCheckBox();
        jCheckBox_Compound = new javax.swing.JCheckBox();
        jCheckBox_HotWater = new javax.swing.JCheckBox();
        jButton_Show_Properties = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jSpinner_Batteries = new javax.swing.JSpinner();
        jButton_Clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 255, 204));

        jPanel_Title.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Solar Property Details");

        javax.swing.GroupLayout jPanel_TitleLayout = new javax.swing.GroupLayout(jPanel_Title);
        jPanel_Title.setLayout(jPanel_TitleLayout);
        jPanel_TitleLayout.setHorizontalGroup(
            jPanel_TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(318, 318, 318))
        );
        jPanel_TitleLayout.setVerticalGroup(
            jPanel_TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Location:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Home Address/House Number:");

        jTextField_Id.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jTextArea_Address.setColumns(20);
        jTextArea_Address.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        jTextArea_Address.setRows(5);
        jScrollPane1.setViewportView(jTextArea_Address);

        jButton_Add_Property.setBackground(new java.awt.Color(0, 153, 51));
        jButton_Add_Property.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Add_Property.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Add_Property.setText("ADD");
        jButton_Add_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Add_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_PropertyActionPerformed(evt);
            }
        });

        jButton_Edit_Property.setBackground(new java.awt.Color(255, 153, 0));
        jButton_Edit_Property.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Edit_Property.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Edit_Property.setText("UPDATE");
        jButton_Edit_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Edit_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Edit_PropertyActionPerformed(evt);
            }
        });

        jButton_Remove_Property.setBackground(new java.awt.Color(255, 51, 51));
        jButton_Remove_Property.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Remove_Property.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Remove_Property.setText("DELETE");
        jButton_Remove_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Remove_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Remove_PropertyActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Size in Square Feet:");

        jTextField_SquareFeet.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Owner ID:");

        jTextField_OwnerId.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Price:");

        jTextField_Price.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jButton_Search_Property.setBackground(new java.awt.Color(51, 51, 51));
        jButton_Search_Property.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Search_Property.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Search_Property.setText("Search");
        jButton_Search_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Search_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Search_PropertyActionPerformed(evt);
            }
        });

        jComboBox_Type.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Bedrooms:");

        jSpinner_Bedrooms.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jSpinner_Bedrooms.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        jSpinner_Bedrooms.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_BedroomsStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Bathrooms:");

        jSpinner_Bathrooms.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jSpinner_Bathrooms.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Number of batteries:");

        jSpinner_Panels.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jSpinner_Panels.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel12.setText("Description/Comment:");

        jTextArea_Comment.setColumns(20);
        jTextArea_Comment.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        jTextArea_Comment.setRows(5);
        jScrollPane3.setViewportView(jTextArea_Comment);

        jCheckBox_SecurityCameras.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jCheckBox_SecurityCameras.setText("Security cameras");
        jCheckBox_SecurityCameras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_SecurityCamerasActionPerformed(evt);
            }
        });

        jCheckBox_ElectricFence.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jCheckBox_ElectricFence.setText("Electric fence");
        jCheckBox_ElectricFence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ElectricFenceActionPerformed(evt);
            }
        });

        jCheckBox_Compound.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jCheckBox_Compound.setText("Compound lighting");
        jCheckBox_Compound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_CompoundActionPerformed(evt);
            }
        });

        jCheckBox_HotWater.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jCheckBox_HotWater.setText("Hot water shower");

        jButton_Show_Properties.setBackground(new java.awt.Color(0, 153, 153));
        jButton_Show_Properties.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Show_Properties.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Show_Properties.setText("VIEW PROPERTIES");
        jButton_Show_Properties.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Show_Properties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Show_PropertiesActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Number of solar panels:");

        jSpinner_Batteries.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jSpinner_Batteries.setModel(new javax.swing.SpinnerNumberModel(0, 0, 500, 1));

        jButton_Clear.setBackground(new java.awt.Color(204, 51, 255));
        jButton_Clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Clear.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Clear.setText("CLEAR");
        jButton_Clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton_Add_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jButton_Edit_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jButton_Remove_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton_Show_Properties, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(6, 6, 6)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_OwnerId)
                                            .addComponent(jTextField_SquareFeet, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jTextField_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(27, 27, 27)
                                            .addComponent(jButton_Search_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(91, 91, 91)
                                        .addComponent(jSpinner_Batteries, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jSpinner_Bedrooms, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jSpinner_Bathrooms, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSpinner_Panels, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(87, 87, 87)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox_SecurityCameras)
                                    .addComponent(jCheckBox_ElectricFence)
                                    .addComponent(jCheckBox_HotWater)
                                    .addComponent(jCheckBox_Compound))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel_Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Search_Property)
                            .addComponent(jTextField_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_SquareFeet))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_OwnerId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Price))
                        .addGap(64, 64, 64))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_Bedrooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox_HotWater))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_Bathrooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox_ElectricFence))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox_Compound))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jSpinner_Panels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jCheckBox_SecurityCameras)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner_Batteries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Add_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Edit_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Remove_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Show_Properties, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_Add_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_PropertyActionPerformed

        // add a new property to the system
        // get the property data form text fields
        
        try
        {
          // we need to populate the jcombobx with the types names
          // and get the value(the value is the integer associated with the string )  
          int type = map.get(jComboBox_Type.getSelectedItem().toString()); 
          int ownerId = Integer.valueOf(jTextField_OwnerId.getText());
          int squareFeet = Integer.valueOf(jTextField_SquareFeet.getText());
          int bedrooms = Integer.valueOf(jSpinner_Bedrooms.getValue().toString());
          int bathrooms = Integer.valueOf(jSpinner_Bathrooms.getValue().toString());
          int panels = Integer.valueOf(jSpinner_Panels.getValue().toString());
          int batteries = Integer.valueOf(jSpinner_Batteries.getValue().toString());
          boolean haveHotShowers = false;
          boolean haveElectricFence = false;
          boolean haveCompound = false;
          boolean haveSecurityCameras = false;
          
          //check if the property have a balcony,pool,backyard and a garage
          if(jCheckBox_SecurityCameras.isSelected()) haveSecurityCameras = true;
          if(jCheckBox_ElectricFence.isSelected()) haveElectricFence = true;
          if(jCheckBox_Compound.isSelected()) haveCompound = true;
          if(jCheckBox_HotWater.isSelected()) haveHotShowers = true;
          
          String price = jTextField_Price.getText();
          String address = jTextArea_Address.getText();
          String comment = jTextArea_Comment.getText();
          
          Prop_Property property = new Prop_Property(0, type, squareFeet, ownerId, price, address, bedrooms, bathrooms, panels, batteries, haveSecurityCameras, haveElectricFence, haveCompound, haveHotShowers, comment);
          
          if(new Prop_Property().addNewProperty(property))
          {
              JOptionPane.showMessageDialog(null, "New Property Added To The System", "Add Property", 1);
            }
            else{
                JOptionPane.showMessageDialog(null, "Property NOT Added To The System", "Add Property", 2);
            }
          
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, " Enter a Valid Owner Id and Square Feet Value", "Invalid Data", 0);
        }
       

    }//GEN-LAST:event_jButton_Add_PropertyActionPerformed

    private void jButton_Edit_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Edit_PropertyActionPerformed

        // edit the selected property
        
        try
        { 
          int id = Integer.valueOf(jTextField_Id.getText()); 
          int type = map.get(jComboBox_Type.getSelectedItem().toString()); 
          int ownerId = Integer.valueOf(jTextField_OwnerId.getText());
          int squareFeet = Integer.valueOf(jTextField_SquareFeet.getText());
          int bedrooms = Integer.valueOf(jSpinner_Bedrooms.getValue().toString());
          int bathrooms = Integer.valueOf(jSpinner_Bathrooms.getValue().toString());
          int panels = Integer.valueOf(jSpinner_Panels.getValue().toString());
          int batteries = Integer.valueOf(jSpinner_Batteries.getValue().toString());
          boolean haveSecurityCameras = false;
          boolean haveElectricFence = false;
          boolean haveCompound = false;
          boolean haveHotShowers = false;
          
          //check if the property have a balcony,pool,backyard and a garage
          if(jCheckBox_SecurityCameras.isSelected()) haveSecurityCameras = true;
          if(jCheckBox_ElectricFence.isSelected()) haveElectricFence = true;
          if(jCheckBox_Compound.isSelected()) haveCompound = true;
          if(jCheckBox_HotWater.isSelected()) haveHotShowers = true;
          
          String price = jTextField_Price.getText();
          String address = jTextArea_Address.getText();
          String comment = jTextArea_Comment.getText();
          
          Prop_Property property = new Prop_Property(id, type, squareFeet, ownerId, price, address, bedrooms, bathrooms, panels, batteries, haveSecurityCameras, haveElectricFence, haveCompound, haveHotShowers, comment);
          
          if(new Prop_Property().editProperty(property))
          {
              JOptionPane.showMessageDialog(null, "Property Data Updated", "Edit Property", 1);
            }
            else{
                JOptionPane.showMessageDialog(null, "Property Data NOT Updated", "Edit Property", 2);
            }
          
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, " Enter a Valid Property Id, Owner Id and Square Feet", "Invalid Data", 0);
        }
       

    }//GEN-LAST:event_jButton_Edit_PropertyActionPerformed

    private void jButton_Remove_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_PropertyActionPerformed

        
        try{

            // deleting the selected property from the system
            int id = Integer.valueOf(jTextField_Id.getText());

            Prop_Property property = new Prop_Property();

            if(jTextField_Id.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Enter the Property ID", "Empty ID", 2);
            }
            else{

                // show a confirmation message before deleting the type
                int yes_or_no = JOptionPane.showConfirmDialog(null, "Do You Want To Delete This Property", "Delete Property", JOptionPane.YES_NO_OPTION);

                if(yes_or_no == JOptionPane.YES_OPTION)
                {
                    if(property.removeProperty(id))
                    {
                        JOptionPane.showMessageDialog(null, "Property Data Deleted", "Delete Property", 1);
                        
                        // clear all fields values after deleting the property
                        jTextField_Id.setText("");
                        jTextArea_Address.setText("");
                        jTextArea_Comment.setText("");
                        jTextField_Price.setText("");
                        jTextField_SquareFeet.setText("");
                        jTextField_OwnerId.setText("");

                        jComboBox_Type.setSelectedIndex(0);

                        jSpinner_Bedrooms.setValue(0);
                        jSpinner_Bathrooms.setValue(0);
                        jSpinner_Panels.setValue(0);
                        jSpinner_Batteries.setValue(0);

                        jCheckBox_SecurityCameras.setSelected(false);
                        jCheckBox_Compound.setSelected(false);
                        jCheckBox_ElectricFence.setSelected(false);
                        jCheckBox_HotWater.setSelected(false);
                        
                        
                    }else{
                        JOptionPane.showMessageDialog(null, "Operation Failed", "Delete Property", 2);
                    }
                }

            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, " Please enter a property ID ", "Invalid Id", 0);
        }

    }//GEN-LAST:event_jButton_Remove_PropertyActionPerformed

    private void jButton_Search_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Search_PropertyActionPerformed

         // uncheck the checkboxes
        jCheckBox_SecurityCameras.setSelected(false);
        jCheckBox_ElectricFence.setSelected(false);
        jCheckBox_Compound.setSelected(false);
        jCheckBox_HotWater.setSelected(false);
        
        
        // search property by id 
        // and display the property data
        
        try{
            
            int propertyId = Integer.valueOf(jTextField_Id.getText());
            
            Prop_Property property = new Prop_Property().findProperty(propertyId);
            
            if(property != null)
            {
                jTextArea_Address.setText(property.getAddress());
                jTextArea_Comment.setText(property.getComment());
                jTextField_Price.setText(property.getPrice());
                jTextField_SquareFeet.setText(String.valueOf(property.getSize()));
                jTextField_OwnerId.setText(String.valueOf(property.getOwnerId()));
               
                // displaying the property type in the combobox
                for(Object type : map.keySet())
                {
                    if(map.get(type).equals(property.getType()))
                        jComboBox_Type.setSelectedItem(type);
                }
               
                jSpinner_Bedrooms.setValue(property.getBedrooms());
                jSpinner_Bathrooms.setValue(property.getBathrooms());
                jSpinner_Panels.setValue(property.getPanels());
                jSpinner_Batteries.setValue(property.getBatteries());
                
                if(property.isSecurityCameras()) jCheckBox_SecurityCameras.setSelected(true);
                if(property.isCompound()) jCheckBox_Compound.setSelected(true);
                if(property.isElectricFence()) jCheckBox_ElectricFence.setSelected(true);
                if(property.isHotShowers()) jCheckBox_HotWater.setSelected(true);
                
            }
            else{
                 JOptionPane.showMessageDialog(null,"Property Not Found", "ERROR", 0);
            }
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, " Enter a Valid Property Id", "Invalid Id", 0);
        }
       

    }//GEN-LAST:event_jButton_Search_PropertyActionPerformed

    private void jButton_Show_PropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Show_PropertiesActionPerformed

        
        //show all properties in a new form
        Display_Property displayform = new Display_Property();
        displayform.setVisible(true);
        displayform.pack();
        displayform.setLocationRelativeTo(null);
        displayform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
    }//GEN-LAST:event_jButton_Show_PropertiesActionPerformed

    private void jCheckBox_ElectricFenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ElectricFenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_ElectricFenceActionPerformed

    private void jCheckBox_SecurityCamerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_SecurityCamerasActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox_SecurityCamerasActionPerformed

    private void jCheckBox_CompoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_CompoundActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_CompoundActionPerformed

    private void jSpinner_BedroomsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_BedroomsStateChanged
        
    }//GEN-LAST:event_jSpinner_BedroomsStateChanged

    private void jButton_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClearActionPerformed
        // TODO add your handling code here:
        jTextField_Id.setText(null);
        jTextField_SquareFeet.setText(null);
        jTextField_Price.setText(null);
        jTextField_OwnerId.setText(null);
        jTextArea_Address.setText(null);
        jSpinner_Bedrooms.setValue(0);
        jSpinner_Bathrooms.setValue(0);
        jSpinner_Panels.setValue(0);
        jSpinner_Batteries.setValue(0);
        jTextArea_Address.setText(null);
        jTextArea_Comment.setText(null);
        jCheckBox_SecurityCameras.setSelected(false);
        jCheckBox_Compound.setSelected(false);
        jCheckBox_ElectricFence.setSelected(false);
        jCheckBox_HotWater.setSelected(false);
        
                 
                                  
    }//GEN-LAST:event_jButton_ClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Property().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add_Property;
    private javax.swing.JButton jButton_Clear;
    private javax.swing.JButton jButton_Edit_Property;
    private javax.swing.JButton jButton_Remove_Property;
    private javax.swing.JButton jButton_Search_Property;
    private javax.swing.JButton jButton_Show_Properties;
    private javax.swing.JCheckBox jCheckBox_Compound;
    private javax.swing.JCheckBox jCheckBox_ElectricFence;
    private javax.swing.JCheckBox jCheckBox_HotWater;
    private javax.swing.JCheckBox jCheckBox_SecurityCameras;
    private javax.swing.JComboBox<String> jComboBox_Type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_Title;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner_Bathrooms;
    private javax.swing.JSpinner jSpinner_Batteries;
    private javax.swing.JSpinner jSpinner_Bedrooms;
    private javax.swing.JSpinner jSpinner_Panels;
    private javax.swing.JTextArea jTextArea_Address;
    private javax.swing.JTextArea jTextArea_Comment;
    private javax.swing.JTextField jTextField_Id;
    private javax.swing.JTextField jTextField_OwnerId;
    private javax.swing.JTextField jTextField_Price;
    private javax.swing.JTextField jTextField_SquareFeet;
    // End of variables declaration//GEN-END:variables
}
